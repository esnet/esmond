#!/bin/bash
# postinst script for esmond
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        if ! getent passwd esmond > /dev/null ; then
            adduser --system --group --home /var/lib/esmond --quiet \
                --no-create-home --disabled-login esmond
        fi

        . /usr/share/debconf/confmodule
        if [ -f /usr/share/dbconfig-common/dpkg/postinst.pgsql ]; then
            . /usr/share/dbconfig-common/dpkg/postinst.pgsql
            dbc_go esmond $@
        fi

        # prepare configurations
        tmp_esmond_conf="$(mktemp -t esmond.conf.XXXXXXXXXX)"
        tmp_settings_py="$(mktemp -t settings.py.XXXXXXXXXX)"
        trap "rm -f ${tmp_esmond_conf} ${tmp_tmp_settings_py}" EXIT
        cp /usr/share/esmond/esmond.conf ${tmp_esmond_conf}
        cp /usr/share/esmond/settings.py ${tmp_settings_py}

        # update database passwords
        if [ -r /etc/dbconfig-common/esmond.conf ]; then
            (
                . /etc/dbconfig-common/esmond.conf
                sed -i "s/^sql_db_name *=.*/sql_db_name = $dbc_dbname/" ${tmp_esmond_conf}
                sed -i "s/^sql_db_user *=.*/sql_db_user = $dbc_dbuser/" ${tmp_esmond_conf}
                sed -i "s/^sql_db_password *=.*/sql_db_password = $dbc_dbpass/" ${tmp_esmond_conf}
            )
        fi
        ucf --debconf-ok ${tmp_esmond_conf} /etc/esmond/esmond.conf
        chgrp www-data /etc/esmond/esmond.conf
        chmod 640 /etc/esmond/esmond.conf

        # update django secret key
        if ! grep '^SECRET_KEY *=' /etc/esmond/settings.py >> ${tmp_settings_py} 2>/dev/null; then
            python /usr/share/esmond/util/gen_django_secret_key.py >> ${tmp_settings_py}
        fi
        ucf --debconf-ok ${tmp_settings_py} /etc/esmond/settings.py
        chgrp www-data /etc/esmond/settings.py
        chmod 640 /etc/esmond/settings.py

        # release debconf descriptor
        db_stop

        # create the TSDB directory
        mkdir -p /var/lib/esmond
        touch /var/lib/esmond/TSDB
        chown -R esmond:esmond /var/lib/esmond

        # setup database
        (
            . /etc/default/esmond
            export ESMOND_ROOT ESMOND_CONF
            export DJANGO_SETTINGS_MODULE=esmond.settings

            python /usr/lib/python2.7/dist-packages/esmond/manage.py migrate
            python /usr/share/esmond/util/migrate_tastypie_keys.py

            mkdir -p /var/lib/esmond/staticfiles
            django-admin collectstatic --clear --noinput
        ) &> /var/log/esmond/install.log

        # fix perms after django runs
        chown -R www-data:www-data /var/log/esmond

        # setup apache
        if [ -e /usr/share/apache2/apache2-maintscript-helper ]; then
            . /usr/share/apache2/apache2-maintscript-helper
            apache2_invoke enmod headers
            apache2_invoke enconf apache-esmond
        else
            a2enmod headers
            [ -e /etc/apache2/mods-available/version.load ] && a2enmod version
            ln -sf /etc/apache2/conf-available/apache-esmond.conf /etc/apache2/conf.d/
            if which invoke-rc.d > /dev/null && [ -x /etc/init.d/apache2 ]; then
                invoke-rc.d apache2 restart || true
            fi
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
