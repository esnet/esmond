#!/usr/bin/bash

MOCK_CFG=/home/vagrant/perfsonar-mock.cfg
MOCK_RESULTS=/home/vagrant/mock-results/epel-7-x86_64

if [ -z "$1" ]; then
    echo "Usage: $0 SRPM"
    echo ""
    echo "Must specify the SRPM to build"
    exit 1
fi

# Creating mock config file
cat > $MOCK_CFG << EOF
include('default.cfg')

config_opts['yum.conf'] += """
# Name: perfSONAR Nightly (Patch Version) RPM Repository
# URL: https://ps-jenkins.grnoc.iu.edu/nightly/
[perfSONAR-nightly-patch]
name = perfSONAR Nightly RPM Repository
baseurl = https://ps-jenkins.grnoc.iu.edu/nightly/el/7/\$basearch/perfsonar/patch
enabled = 1
protect = 0
gpgkey = https://raw.githubusercontent.com/perfsonar/perfsonar-repo/master/etc.el7/RPM-GPG-KEY-perfSONAR-testing
gpgcheck = 1

# Name: perfSONAR Nightly (Minor Version) RPM Repository
# (disable it if you only want to use Patch Version)
# URL: https://perfsonar-dev3.grnoc.iu.edu/nightly/
[perfSONAR-nightly-minor]
name = perfSONAR Nightly RPM Repository
baseurl = https://ps-jenkins.grnoc.iu.edu/nightly/el/7/\$basearch/perfsonar/minor
enabled = 1
protect = 0
gpgkey = https://raw.githubusercontent.com/perfsonar/perfsonar-repo/master/etc.el7/RPM-GPG-KEY-perfSONAR-testing
gpgcheck = 1
"""
EOF

sudo mock -r $MOCK_CFG --clean
sudo mock -r $MOCK_CFG --init
sudo mock -r $MOCK_CFG --install postgresql10-devel
sudo mock -r $MOCK_CFG --shell 'ln -fs /usr/pgsql-10/bin/pg_config /usr/sbin/pg_config'
sudo mock -r $MOCK_CFG --resultdir=${MOCK_RESULTS} --arch=x86_64 --enable-network --no-clean --no-cleanup-after $1

